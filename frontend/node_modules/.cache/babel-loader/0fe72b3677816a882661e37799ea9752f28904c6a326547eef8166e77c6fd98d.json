{"ast":null,"code":"import jwt from 'jsonwebtoken';\nexport const isAuthenticated = () => {\n  const token = localStorage.getItem('token'); // Retrieve the token from local storage or wherever you store it\n  console.log(\"USER IS LOGGED IN: \");\n  if (token) {\n    // If a token exists, verify its validity\n    try {\n      const decodedToken = jwt.verify(token, 'test'); // Replace 'your-secret-key' with your actual secret key\n\n      return true; // Token is valid and user is authenticated\n    } catch (error) {\n      console.error('Invalid token:', error);\n    }\n  }\n  return false; // Token doesn't exist or is invalid, user is not authenticated\n};","map":{"version":3,"names":["jwt","isAuthenticated","token","localStorage","getItem","console","log","decodedToken","verify","error"],"sources":["/Users/ppenchev/Documents/nodeJS/ReMoteTaskTracker/frontend/src/utils/auth.js"],"sourcesContent":["import jwt from 'jsonwebtoken';\n\n\nexport const isAuthenticated = () => {\n\n  const token = localStorage.getItem('token'); // Retrieve the token from local storage or wherever you store it\n  console.log(\"USER IS LOGGED IN: \" )\n\n  if (token) {\n    // If a token exists, verify its validity\n    try {\n\n      const decodedToken = jwt.verify(token, 'test'); // Replace 'your-secret-key' with your actual secret key\n\n      return true; // Token is valid and user is authenticated\n    } catch (error) {\n      console.error('Invalid token:', error);\n    }\n  }\n  \n  return false; // Token doesn't exist or is invalid, user is not authenticated\n};\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,cAAc;AAG9B,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAEnC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;EAC7CC,OAAO,CAACC,GAAG,CAAC,qBAAsB,CAAC;EAEnC,IAAIJ,KAAK,EAAE;IACT;IACA,IAAI;MAEF,MAAMK,YAAY,GAAGP,GAAG,CAACQ,MAAM,CAACN,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;;MAEhD,OAAO,IAAI,CAAC,CAAC;IACf,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACxC;EACF;EAEA,OAAO,KAAK,CAAC,CAAC;AAChB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}